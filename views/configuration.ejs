<html>
  <head>
    <title>A Trello Dashboard</title>
		<script src="https://cdn.shopify.com/s/assets/external/app.js"></script>
    <link rel="stylesheet" href="../stylesheets/uptown.css" />
    <link rel="stylesheet" href="../stylesheets/style.css" />

		<script type="text/javascript">
		ShopifyApp.init({
			apiKey: '<%= api_key %>',
			shopOrigin: 'https://<%= shop %>'
		});
		</script>
	</head>
  <body>
                        <!-- SHOPIFY HEADER -->

    <!-- Jquery -->
    <script src="https://code.jquery.com/jquery-1.7.1.min.js"></script>
    <script>
      $("#savedMsg").toggle(false);

      var saveMessage = function(text) {
        $("savedMsg").removeClass();
        $("#savedMsgLink").text(text);
        if (text.includes("Error")) {
          $("#savedMsg").addClass("full-width alert error");
        } else {
          $("#savedMsg").addClass("full-width alert success");
        }
        $("#savedMsg").toggle(true);

      }

      ShopifyApp.ready(function() {
        ShopifyApp.Bar.initialize({
          title: '<%= title %>',
          icon: '/images/logo.png',
          buttons: {
            primary: {
              label: "Save",
              callback: function() {

                // Make sure save message is hidden
                $("#savedMsg").toggle(false);

                // Dictionary that gets sent to server
                var rulesData = {
                  "shop"  : "<%= shop %>",
                  "recieved" : "",
                  "fulfilled" : "",
                  "shopify_rules" : [],
                  "trello_rules" : []
                };

                // Recieved orders go to this list
                var recieved = $("#recievedOrders").find(":selected");
                if(recieved.val() === "-") {
                  rulesData["recieved"] = null;
                } else {
                  rulesData["recieved"] = recieved.attr('id');
                };

                // Fulfilled orders go to this list
                var fulfilled = $("#fulfilledOrders").find(":selected");
                if(fulfilled.val() === "-") {
                  rulesData["fulfilled"] = null;
                } else {
                  rulesData["fulfilled"] = fulfilled.attr('id');
                };

                // Shopify Rules
                var shopifyRules = $("#extraShopifyRules").children();
                $.each(shopifyRules, function() {
                  var newRule = {}
                  newRule.id = (this.id);  //id
                  newRule.country = ($(this).find(".optionSelect").val()); // country/tag
                  newRule.input = ($(this).find("input").val()); //input
                  newRule.list = ($(this).find(".listOption").attr('id'));

                  rulesData["shopify_rules"].push(newRule);
                });

                // Trello Rules
                var trelloRules = $("#extraTrelloRules").children();
                $.each(trelloRules, function() {
                  var newRule = {};
                  newRule.id = (this.id);
                  newRule.list = $(this).find(".listOption").attr('id');
                  newRule.input = $(this).find("input").val();
                  rulesData["trello_rules"].push(newRule);
                });

                $.ajax({
                  type: "POST",
                  url : "/configuration",
                  dataType : 'json',
                  data: rulesData,
                  statusCode: {
                    200 : function() {
                      console.log("Settings saved");
                      saveMessage("Success. Your settings were saved.");
                    },
                    500 : function () {
                      console.log("Error. Your settings were not saved properly");
                      saveMessage("Error. Your settings were not saved properly");
                    }
                  }
                });
              }
            },
            secondary: [
              // Dropdown example
              {
                label: "More",
                type: "dropdown",
                links: [
                  // Link Button that opens in the app
                  { label: "Rate Us", href: "/update", target: "app" },
                  // Button with a callback function
                  { label: "Feature Request", callback: function() { alert("destroy") } }
                ]
              },
              {
                // Link Button that opens in a new window
                label: "Help", href: 'http://<%= shop %>.myshopify.com',
                target: "new"
              },
              {
                // Link Button that opens in a new window
                label: "Contact", href: 'mailto:joshua.bitossi@gmail.com',
                target: "new"
              }
            ]
          }
        });
        ShopifyApp.Bar.loadingOff();

      });
      </script>
                          <!-- END SHOPIFY HEADER -->

  <main>
    <section id="loggedout" class="full-width alert warning">
      <a id="connectLink" href="#" class="full-width" style="text-align:center;">Click here to authorize Trello</a>
    </section>
    <div id="loggedin" style="margin-right:10px;">
        <span id="header" class="columns twelve" style="text-align:right;">
            Logged in to <a href="https://trello.com">Trello</a> as <span id="fullName">.</span></br>
            <a id="disconnect" href="#">Log Out</a>
        </span>

        <div id="output"></div>
    </div>
    <section id="savedMsg" class="">
      <p id="savedMsgLink" class="full-width" style="text-align:center;"></p>
    </section>
    <div id="rules">
      <!-- Main Rules -->
      <section class="columns twelve">
        <h3>Main Rules</h3>
      </section>
      <div class="columns eleven">
        <span class="columns three" style="text-align:left;">All recieved orders go to list: </span>
        <select id="recievedOrders" class="listOption columns six" style="margin-left:0px;">
          <option>-</option>
        </select>
      </div>
      <div class="columns eleven" style="margin-top: 5px;">
        <span class="columns three" style="text-align:left;">All fulfilled orders go to list: </span>
        <select id="fulfilledOrders" class="listOption columns six" style="margin-left:0px;">
          <option>-</option>
        </select>
      </div>


    <!-- Extra Rules -->
    <section class="columns twelve" style="padding-top:20px;">
      <h3>Shopify Rules</h3>
      <a onclick="addExtraShopifyRule()"><i class="icon-addition" style="height: 16px;margin-top: 6px;padding-left: 10px;"></i></a>
    </section>
      <div class="columns twelve">
        <ul style="list-style: none" id="extraShopifyRules">
        </ul>
      </div>
    <section class="columns twelve" style="padding-top:20px;">
      <h3>Trello Rules</h3>
      <a onclick="addExtraTrelloRule()"><i class="icon-addition" style="height: 16px;margin-top: 6px;padding-left: 10px;"></i></a>
    </section>
    <div class="columns twelve">
        <ul style="list-style: none" id="extraTrelloRules">
          <!-- Extra Rules -->
        </ul>
    </div>

    <br />
    <section>
    <div class="columns twelve">
      <!-- <button id="save" style="position:absolute;bottom:0;right:50;margin-bottom:10px;margin-top:20px;" onclick="submitForm()" value="Save">Save</button> -->
    </div>
    </section>
  </main>
    <!-- Trello API -->
    <script src="https://api.trello.com/1/client.js?key=dbdd3808d314c362931b7c8918766c03"></script>
    <script type="text/javascript">
      var listsList = ""; // {BoardName : {list object}}
      var rule_count = 0;

      // Authorize Trello with stored token if it exists
      try {
        Trello.authorize({
          name  : "Shopify Orders",
          interactive : false,
          success : onAuthorize
        })
      } catch(e) {
        console.log(e);
      };

      var shopifyRule = "<li class='extraRule'><section class='columns eleven' style=margin-top:5px;'> <span class='column one'>Orders with</span>\
          <select class='optionSelect columns two' style='margin-left:0px; margin-right:5px;'>\
            <option>Country</option>\
            <option>Tag</option>\
            <option>Product Barcode</option>\
            <option>Product SKU</option>\
            <option>Product Name</option>\
          </select>\
          <input type='text' placeholder='Enter your value' class='columns three' style='margin-right:5px;' />\
          <span style='margin-right:10px;'>go to list</span>\
          <select class='listOption columns two' style='margin-left:0px;'>\
            <option>-</option>\
          </select>\
          <a class='columns one' href='#'><i class='icon-close'></i></a>\
        </section></li>";

      var trelloRule = "<li class='extraRule'><section class='columns eleven'style=margin-top:5px;'><span class='column one'>Orders in </span>\
          <select class='listOption columns two' ></select>\
          <span class='column one'>list have</span>\
          <input type='text' class='column two' />\
          <span class='column two'>tag assigned to them.</span>\
          <a href='#' class='column one'><i class='icon-close'></i></a>\
        </section></li>";


      var updateLoggedIn = function() {
          var isLoggedIn = Trello.authorized();
          $("#loggedout").toggle(!isLoggedIn);
          $("#loggedin").toggle(isLoggedIn);
      };

      updateLoggedIn();

      // Event handlers
      $("#disconnect").click(logout);

      $("#connectLink").click(function() {
        try {
          Trello.authorize({
            type  : "popup",
            name  : "Shopify Orders",
            scope : {
              read    : 'allowRead',
              write   : 'allowWrite',
              account : 'allowAccount'
            },
            expiration: "never",
            persist : true,
            success : onAuthorize
          })
        } catch(e) {
          console.log(e);
        }
      });

      var logout = function() {
          Trello.deauthorize();
          updateLoggedIn();
          window.location.reload(false);  //Reload the page
      };

      // Trello error message
      var error = function(errorMsg) {
        console.log(errorMsg);
      };

      // Make sure Trello user is logged in. Get name, boards and lists.
      var onAuthorize = function() {

        // Update logged in message
        updateLoggedIn();

        // Send Trello token server to store in the session
        $.ajax({
          type: "POST",
          url: "/trello",
          data : {"trello_token" : localStorage.getItem(localStorage.key('trello_token'))}
        });

        // Get Trello user's name
        Trello.members.get("me", function(member){
          $("#fullName").text(member.fullName);
        });

        // Get users boards. For each board get the lists within that board
        Trello.get('/member/me/boards', function(res) {
          for (board in res) {
            getLists(res[board]["id"], res[board]['name'], function(item) {
              listsList += item;
            });
            setConfiguration();
          };
        }, error);

        function getLists(boardID, boardName, callback) {
          Trello.get('/boards/'+boardID+'/lists', function(res) {
            var listString = "";
            listString += "<optgroup label='"+boardName+"'>"
            for (var item in res) {
              var name = res[item]["name"];
              var id = res[item]["id"];
              listString += "<option value="+id+" id=" + id + ">" + name + "</option>"
            };
            listString += "</optgroup>";
            $('.listOption').append($(listString));
            callback(listString);
          });
        };
      };

      function addExtraShopifyRule() {
        $("#extraShopifyRules").append($(shopifyRule));
        var lastRule = $("#extraShopifyRules li:last-child .listOption")
        $(lastRule).append($(listsList));

        // console.log($("#extraRules li:last-child #listOption"))
        // $("#extraRules li:last-child #listOption").append(listsList);
        rule_count ++ ;
        $("#extraShopifyRules li:last-child").attr("id", rule_count);
        $("#extraShopifyRules a").click(function() {
          $(this).parent().remove();
        });
      };

      function addExtraTrelloRule() {
        $("#extraTrelloRules").append($(trelloRule));
        var lastRule = $("#extraTrelloRules li:last-child .listOption")
        $(lastRule).append($(listsList));

        // console.log($("#extraRules li:last-child #listOption"))
        // $("#extraRules li:last-child #listOption").append(listsList);
        rule_count ++ ;
        $("#extraTrelloRules li:last-child").attr("id", rule_count);
        $("#extraTrelloRules a").click(function() {
          $(this).parent().remove();
        });
      };

      // Get customers rules from the database
      function setConfiguration() {
        $.ajax({
          type: "POST",
          url: "/get_configuration",
          data : {"shop" : "<%= shop %>" },
          success : function (data) {
            setInitialSettings(data);
          }
        });

        function setInitialSettings(data) {
          // Sets the initial config settings based on users saved settings.
          if (data.length === 0 ) {
            return ;
          } else {
              if (data.recieved !== "null") {
                $('#recievedOrders option[id=' + data.recieved + ']').attr('selected','selected');
              };

              if (data.fulfilled !== "null") {
                $('#fulfilledOrders option[id=' + data.fulfilled + ']').attr('selected','selected');
              };

              if (data.shopify_rules.length !== 0) {
                console.log("yes")
              };

              if (data.trello_rules.length !== 0) {
                console.log("yes")
            }
          }
        };
      };
    </script>
    <footer>
    </footer>
  </main>
  </body>
</html>
